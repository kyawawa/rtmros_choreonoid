#dist: trusty
dist: xenial
sudo: required
language:
  - minimal
cache:
  timeout: 300
  apt: true
  directories:
    - $HOME/docker

services:
  - docker

env:
#  - DISTR=indigo  BASEIMG=osrf/ros:indigo-desktop-full
  - DISTR=kinetic BASEIMG=osrf/ros:kinetic-desktop-full

before_script:
  - docker pull ${BASEIMG}
#  - docker build -f Dockerfile.kinetic_hrpsys --tag start-jsk/hrpsys_choreonoid:kinetic .
  # Load cached docker images
  - if [ -d $HOME/docker/${DISTR} ]; then ls $HOME/docker/${DISTR}/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

script:
  # Set timeout to 40 minutes
  - |
    timeout 2400 docker build -f Dockerfile.${DISTR} --tag start-jsk/rtmros_choreonoid:${DISTR} --cache-from start-jsk/rtmros_choreonoid:${DISTR} . || \
    echo 'Time out. Kill docker build to save cache.'

before_cache:
  # Save tagged docker images
  - mkdir -p $HOME/docker/${DISTR}
  - cache_threshold=$(date "+%Y%m%d %H:%M")
  - |
    docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}' | grep start-jsk | \
    xargs -n 2 -t sh -c 'if [ -e $HOME/docker/${DISTR}/$1.tar.gz ]; then \
    touch $HOME/docker/${DISTR}/$1.tar.gz; \
    else docker save $0 | gzip -2 > $HOME/docker/${DISTR}/$1.tar.gz; fi'
  - find $HOME/docker/${DISTR}/. \! -newermt "$cache_threshold" -name *.tar.gz | xargs rm -rf

# jobs:
#   include:
#     - stage: preinstall_hrpsys
#       script: docker build -f Dockerfile.kinetic_hrpsys --tag start-jsk/hrpsys_choreonoid:kinetic .
#     - stage: main
#       script: docker build -f Dockerfile.kinetic_main   --tag start-jsk/rtmros_choreonoid:kinetic .
