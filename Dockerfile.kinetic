FROM osrf/ros:kinetic-desktop-full

SHELL ["/bin/bash", "-c"]

#ENV CNOID_BRANCH master
ENV CNOID_BRANCH release-1.6

ENV CNOID_INSTALL_DIR /usr/local/choreonoid
ENV PATH ${CNOID_INSTALL_DIR}/bin:${PATH}
ENV LD_LIBRARY_PATH ${CNOID_INSTALL_DIR}/lib:${LD_LIBRARY_PATH}
ENV PKG_CONFIG_PATH ${CNOID_INSTALL_DIR}/lib/pkgconfig:${PKG_CONFIG_PATH}
ENV CNOID_RTM_DIR /opt/ros/${ROS_DISTRO}
ENV WORKHOME /choreonoid

### for choreonoid
RUN apt-get update  -q -qq && \
    apt-get install -q -qq -y mesa-utils python-pip wget \
    ros-${ROS_DISTRO}-catkin python-wstools python-catkin-tools \
# choreonoid
    libyaml-dev ros-kinetic-openrtm-aist ros-kinetic-openrtm-aist-python libqt4-opengl-dev \
# hrpsys(hrputil)
    libopencv-dev libsdl1.2-dev freeglut3-dev libglew-dev

#### choreonoid
WORKDIR ${WORKHOME}/src
## To avoid using cache though remote repository is updated.
RUN wget https://api.github.com/repos/s-nakaoka/choreonoid/git/refs/heads/${CNOID_BRANCH} -O choreonoid-version.json --timestamping || echo 'Exceed API rate limit. Use cache.'
RUN source /opt/ros/$ROS_DISTRO/setup.bash && \
    git clone --depth 1 -b ${CNOID_BRANCH} https://github.com/s-nakaoka/choreonoid.git && \
    mkdir -p choreonoid/build && \
    cd choreonoid/build && \
    cmake .. -DCMAKE_INSTALL_PREFIX=${CNOID_INSTALL_DIR} -DOPENRTM_DIR=${CNOID_RTM_DIR} -DENABLE_INSTALL_RPATH=ON -DENABLE_CORBA=ON -DBUILD_CORBA_PLUGIN=ON -DBUILD_OPENRTM_PLUGIN=ON -DUSE_BUILTIN_CAMERA_IMAGE_IDL=ON -DBUILD_BALANCER_PLUGIN=OFF -DBUILD_POSE_SEQ_PLUGIN=OFF -DENABLE_SAMPLES=OFF -DUSE_PYTHON3=OFF -DUSE_PYBIND11=OFF && \
    make -j4 && \
    make install

#### base ros pkg, they should be replaced by deb package
WORKDIR ${WORKHOME}/base_ws
RUN wget https://api.github.com/repos/fkanehiro/hrpsys-base/git/refs/heads/master -O hrpsys-version.json --timestamping || echo 'Exceed API rate limit. Use cache.'
RUN (mkdir -p src && cd src && git clone --depth 1 https://github.com/fkanehiro/hrpsys-base.git hrpsys) && \
    apt-get update -q -qq && rosdep install -y -r --from-paths src --ignore-src || echo 'Ignore rosdep error' && \
    source /opt/ros/$ROS_DISTRO/setup.bash && catkin build hrpsys --no-notify -DENABLE_DOXYGEN=OFF

# #### ros pkg
WORKDIR ${WORKHOME}/catkin_ws/src

RUN wget https://api.github.com/repos/start-jsk/rtmros_tutorials/git/refs/heads/master -O rtmros_tutorials-version.json --timestamping || \
    echo 'Exceed API rate limit. Use cache.' && \
    git clone --depth 1 https://github.com/start-jsk/rtmros_tutorials.git && \
## remove hrpsys_gazebo, hironx, hrpsys, opnehrp3 tutorials because it cause to install ros-indigo-hrpsys
    (cd rtmros_tutorials; rm -rf hrpsys_gazebo_tutorials hironx_tutorial hrpsys_tutorials openhrp3_tutorials)

RUN wget https://api.github.com/repos/YoheiKakiuchi/rtmros_common/git/refs/heads/fix_rtc_name2 -O rtmros_common-version.json --timestamping || \
    echo 'Exceed API rate limit. Use cache.' && \
    git clone --depth 1 https://github.com/YoheiKakiuchi/rtmros_common -b fix_rtc_name2

RUN wget https://api.github.com/repos/PR2/pr2_navigation/git/refs/heads/master -O pr2_navigation-version.json --timestamping || \
    echo 'Exceed API rate limit. Use cache.' && \
    git clone --depth 1 https://github.com/PR2/pr2_navigation.git

RUN wget https://api.github.com/repos/jsk-ros-pkg/jsk_robot/git/refs/heads/master -O jsk_robot-version.json --timestamping || \
    echo 'Exceed API rate limit. Use cache.' && \
    git clone --depth 1 https://github.com/jsk-ros-pkg/jsk_robot.git && \
## why?
    (cd jsk_robot; rm -rf jsk_baxter_robot jsk_naoqi_robot jsk_robot doc jsk_fetch_robot jsk_pr2_robot)

## for travis
COPY . rtmros_choreonoid/

WORKDIR ${WORKHOME}/catkin_ws

RUN source ${WORKHOME}/base_ws/devel/setup.bash
RUN apt-get update -q -qq && rosdep install -y -r --from-paths src --ignore-src || echo 'Ignore_rosdep_error'

# ## should be solved ...,  hrpsys-base, jsk_common, pr2_navigation ###
# # RUN apt-get install -q -qq -y ros-${ROS_DISTRO}-jsk-tilt-laser ros-${ROS_DISTRO}-jsk-recognition && \
# #     apt-get clean && \
# #     rm -rf /var/lib/apt/lists/


### build ros packages
#RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && catkin build hrpsys_choreonoid_tutorials jsk_robot_startup pr2_navigation_self_filter --no-status --no-notify -j 1 -p 1"
RUN catkin build hrpsys_choreonoid_tutorials jsk_robot_startup pr2_navigation_self_filter --no-status --no-notify

## Need?
RUN source ${WORKHOME}/catkin_ws/devel/setup.bash && rosrun roseus generate-all-msg-srv.sh geometry_msgs sensor_msgs hrpsys_ros_bridge opencv_apps

## ADD ./my_entrypoint.sh /
## ENTRYPOINT ["/my_entrypoint.sh"]
## CMD ["bash"]
